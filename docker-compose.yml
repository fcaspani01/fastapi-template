version: '3.8'

services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    # -------- replace with comment to run with gunicorn --------
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    # command: gunicorn app.main:app -w 4 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:8000
    env_file:
      - ./src/.env
    ports:
      - "8087:8000"
    depends_on:
      - db
      - redis
    volumes:
      - ./src:/code

  worker:
    build: 
      context: .
      dockerfile: Dockerfile
    command: arq app.worker.WorkerSettings
    env_file:
      - ./src/.env
    depends_on:
      - db
      - redis
    volumes:
      - ./src:/code

  db:
    image: postgres:13
    env_file:
      - ./src/.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5436:5432"

  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

  # #-------- uncomment to create first superuser --------
#  create_superuser:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     env_file:
#       - ./src/.env
#     depends_on:
#       - db
#       - web
#     command: python -m src.scripts.create_first_superuser
#     volumes:
#       - ./src:/code

  #-------- uncomment to run tests --------
  # pytest:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile 
  #   env_file:
  #     - ./src/.env 
  #   depends_on:
  #     - db
  #     - create_superuser
  #     - redis
  #   command: python -m pytest
  #   volumes:
  #     - ./src:/code

  # #-------- uncomment to create first tier --------
#  create_tier:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     env_file:
#       - ./src/.env
#     depends_on:
#       - db
#       - web
#     command: python -m src.scripts.create_first_tier
#     volumes:
#       - ./src:/code

  # #-------- uncomment to run migration --------
#  create_migration:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     env_file:
#       - ./src/.env
#     depends_on:
#       - db
#       - web
#     command: alembic revision --autogenerate
#     volumes:
#       - ./src:/code

  # #-------- uncomment to upgrade migration --------
#  upgrade_migration:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     env_file:
#       - ./src/.env
#     depends_on:
#       - db
#       - web
#     command: alembic upgrade head
#     volumes:
#       - ./src:/code
volumes:
  postgres-data:
  redis-data:
 